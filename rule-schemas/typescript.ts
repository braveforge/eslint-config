// This file is autogenerated by scripts/build-rule-schemas.js
// Do NOT modify this file manually

import type { Linter } from 'eslint';

export interface TypescriptRules {
  'typescript/adjacent-overload-signatures': Linter.RuleEntry;
  'typescript/array-type': Linter.RuleEntry;
  'typescript/await-thenable': Linter.RuleEntry;
  'typescript/ban-ts-comment': Linter.RuleEntry;
  'typescript/ban-tslint-comment': Linter.RuleEntry;
  'typescript/class-literal-property-style': Linter.RuleEntry;
  'typescript/class-methods-use-this': Linter.RuleEntry;
  'typescript/consistent-generic-constructors': Linter.RuleEntry;
  'typescript/consistent-indexed-object-style': Linter.RuleEntry;
  'typescript/consistent-return': Linter.RuleEntry;
  'typescript/consistent-type-assertions': Linter.RuleEntry;
  'typescript/consistent-type-definitions': Linter.RuleEntry;
  'typescript/consistent-type-exports': Linter.RuleEntry;
  'typescript/consistent-type-imports': Linter.RuleEntry;
  'typescript/default-param-last': Linter.RuleEntry;
  'typescript/dot-notation': Linter.RuleEntry;
  'typescript/explicit-function-return-type': Linter.RuleEntry;
  'typescript/explicit-member-accessibility': Linter.RuleEntry;
  'typescript/explicit-module-boundary-types': Linter.RuleEntry;
  'typescript/init-declarations': Linter.RuleEntry;
  'typescript/max-params': Linter.RuleEntry;
  'typescript/member-ordering': Linter.RuleEntry;
  'typescript/method-signature-style': Linter.RuleEntry;
  'typescript/naming-convention': Linter.RuleEntry;
  'typescript/no-array-constructor': Linter.RuleEntry;
  'typescript/no-array-delete': Linter.RuleEntry;
  'typescript/no-base-to-string': Linter.RuleEntry;
  'typescript/no-confusing-non-null-assertion': Linter.RuleEntry;
  'typescript/no-confusing-void-expression': Linter.RuleEntry;
  'typescript/no-deprecated': Linter.RuleEntry;
  'typescript/no-dupe-class-members': Linter.RuleEntry;
  'typescript/no-duplicate-enum-values': Linter.RuleEntry;
  'typescript/no-duplicate-type-constituents': Linter.RuleEntry;
  'typescript/no-dynamic-delete': Linter.RuleEntry;
  'typescript/no-empty-function': Linter.RuleEntry;
  'typescript/no-empty-interface': Linter.RuleEntry;
  'typescript/no-empty-object-type': Linter.RuleEntry;
  'typescript/no-explicit-any': Linter.RuleEntry;
  'typescript/no-extra-non-null-assertion': Linter.RuleEntry;
  'typescript/no-extraneous-class': Linter.RuleEntry;
  'typescript/no-floating-promises': Linter.RuleEntry;
  'typescript/no-for-in-array': Linter.RuleEntry;
  'typescript/no-implied-eval': Linter.RuleEntry;
  'typescript/no-import-type-side-effects': Linter.RuleEntry;
  'typescript/no-inferrable-types': Linter.RuleEntry;
  'typescript/no-invalid-this': Linter.RuleEntry;
  'typescript/no-invalid-void-type': Linter.RuleEntry;
  'typescript/no-loop-func': Linter.RuleEntry;
  'typescript/no-loss-of-precision': Linter.RuleEntry;
  'typescript/no-magic-numbers': Linter.RuleEntry;
  'typescript/no-meaningless-void-operator': Linter.RuleEntry;
  'typescript/no-misused-new': Linter.RuleEntry;
  'typescript/no-misused-promises': Linter.RuleEntry;
  'typescript/no-misused-spread': Linter.RuleEntry;
  'typescript/no-mixed-enums': Linter.RuleEntry;
  'typescript/no-namespace': Linter.RuleEntry;
  'typescript/no-non-null-asserted-nullish-coalescing': Linter.RuleEntry;
  'typescript/no-non-null-asserted-optional-chain': Linter.RuleEntry;
  'typescript/no-non-null-assertion': Linter.RuleEntry;
  'typescript/no-redeclare': Linter.RuleEntry;
  'typescript/no-redundant-type-constituents': Linter.RuleEntry;
  'typescript/no-require-imports': Linter.RuleEntry;
  'typescript/no-restricted-imports': Linter.RuleEntry;
  'typescript/no-restricted-types': Linter.RuleEntry;
  'typescript/no-shadow': Linter.RuleEntry;
  'typescript/no-this-alias': Linter.RuleEntry;
  'typescript/no-type-alias': Linter.RuleEntry;
  'typescript/no-unnecessary-boolean-literal-compare': Linter.RuleEntry;
  'typescript/no-unnecessary-condition': Linter.RuleEntry;
  'typescript/no-unnecessary-parameter-property-assignment': Linter.RuleEntry;
  'typescript/no-unnecessary-qualifier': Linter.RuleEntry;
  'typescript/no-unnecessary-template-expression': Linter.RuleEntry;
  'typescript/no-unnecessary-type-arguments': Linter.RuleEntry;
  'typescript/no-unnecessary-type-assertion': Linter.RuleEntry;
  'typescript/no-unnecessary-type-constraint': Linter.RuleEntry;
  'typescript/no-unnecessary-type-conversion': Linter.RuleEntry;
  'typescript/no-unnecessary-type-parameters': Linter.RuleEntry;
  'typescript/no-unsafe-argument': Linter.RuleEntry;
  'typescript/no-unsafe-assignment': Linter.RuleEntry;
  'typescript/no-unsafe-call': Linter.RuleEntry;
  'typescript/no-unsafe-declaration-merging': Linter.RuleEntry;
  'typescript/no-unsafe-enum-comparison': Linter.RuleEntry;
  'typescript/no-unsafe-function-type': Linter.RuleEntry;
  'typescript/no-unsafe-member-access': Linter.RuleEntry;
  'typescript/no-unsafe-return': Linter.RuleEntry;
  'typescript/no-unsafe-type-assertion': Linter.RuleEntry;
  'typescript/no-unsafe-unary-minus': Linter.RuleEntry;
  'typescript/no-unused-expressions': Linter.RuleEntry;
  'typescript/no-unused-vars': Linter.RuleEntry;
  'typescript/no-use-before-define': Linter.RuleEntry;
  'typescript/no-useless-constructor': Linter.RuleEntry;
  'typescript/no-useless-empty-export': Linter.RuleEntry;
  'typescript/no-var-requires': Linter.RuleEntry;
  'typescript/no-wrapper-object-types': Linter.RuleEntry;
  'typescript/non-nullable-type-assertion-style': Linter.RuleEntry;
  'typescript/only-throw-error': Linter.RuleEntry;
  'typescript/parameter-properties': Linter.RuleEntry;
  'typescript/prefer-as-const': Linter.RuleEntry;
  'typescript/prefer-destructuring': Linter.RuleEntry;
  'typescript/prefer-enum-initializers': Linter.RuleEntry;
  'typescript/prefer-find': Linter.RuleEntry;
  'typescript/prefer-for-of': Linter.RuleEntry;
  'typescript/prefer-function-type': Linter.RuleEntry;
  'typescript/prefer-includes': Linter.RuleEntry;
  'typescript/prefer-literal-enum-member': Linter.RuleEntry;
  'typescript/prefer-namespace-keyword': Linter.RuleEntry;
  'typescript/prefer-nullish-coalescing': Linter.RuleEntry;
  'typescript/prefer-optional-chain': Linter.RuleEntry;
  'typescript/prefer-promise-reject-errors': Linter.RuleEntry;
  'typescript/prefer-readonly': Linter.RuleEntry;
  'typescript/prefer-readonly-parameter-types': Linter.RuleEntry;
  'typescript/prefer-reduce-type-parameter': Linter.RuleEntry;
  'typescript/prefer-regexp-exec': Linter.RuleEntry;
  'typescript/prefer-return-this-type': Linter.RuleEntry;
  'typescript/prefer-string-starts-ends-with': Linter.RuleEntry;
  'typescript/prefer-ts-expect-error': Linter.RuleEntry;
  'typescript/promise-function-async': Linter.RuleEntry;
  'typescript/related-getter-setter-pairs': Linter.RuleEntry;
  'typescript/require-array-sort-compare': Linter.RuleEntry;
  'typescript/require-await': Linter.RuleEntry;
  'typescript/restrict-plus-operands': Linter.RuleEntry;
  'typescript/restrict-template-expressions': Linter.RuleEntry;
  'typescript/return-await': Linter.RuleEntry;
  'typescript/sort-type-constituents': Linter.RuleEntry;
  'typescript/strict-boolean-expressions': Linter.RuleEntry;
  'typescript/switch-exhaustiveness-check': Linter.RuleEntry;
  'typescript/triple-slash-reference': Linter.RuleEntry;
  'typescript/typedef': Linter.RuleEntry;
  'typescript/unbound-method': Linter.RuleEntry;
  'typescript/unified-signatures': Linter.RuleEntry;
  'typescript/use-unknown-in-catch-callback-variable': Linter.RuleEntry;
}