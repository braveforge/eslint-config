// This file is autogenerated by scripts/build-rule-schemas.js
// Do NOT modify this file manually

import type { Linter } from 'eslint';

export interface UnicornRules {
  'unicorn/better-regex': Linter.RuleEntry;
  'unicorn/catch-error-name': Linter.RuleEntry;
  'unicorn/consistent-assert': Linter.RuleEntry;
  'unicorn/consistent-date-clone': Linter.RuleEntry;
  'unicorn/consistent-destructuring': Linter.RuleEntry;
  'unicorn/consistent-empty-array-spread': Linter.RuleEntry;
  'unicorn/consistent-existence-index-check': Linter.RuleEntry;
  'unicorn/consistent-function-scoping': Linter.RuleEntry;
  'unicorn/custom-error-definition': Linter.RuleEntry;
  'unicorn/empty-brace-spaces': Linter.RuleEntry;
  'unicorn/error-message': Linter.RuleEntry;
  'unicorn/escape-case': Linter.RuleEntry;
  'unicorn/expiring-todo-comments': Linter.RuleEntry;
  'unicorn/explicit-length-check': Linter.RuleEntry;
  'unicorn/filename-case': Linter.RuleEntry;
  'unicorn/import-style': Linter.RuleEntry;
  'unicorn/new-for-builtins': Linter.RuleEntry;
  'unicorn/no-abusive-eslint-disable': Linter.RuleEntry;
  'unicorn/no-accessor-recursion': Linter.RuleEntry;
  'unicorn/no-anonymous-default-export': Linter.RuleEntry;
  'unicorn/no-array-callback-reference': Linter.RuleEntry;
  'unicorn/no-array-for-each': Linter.RuleEntry;
  'unicorn/no-array-method-this-argument': Linter.RuleEntry;
  'unicorn/no-array-reduce': Linter.RuleEntry;
  'unicorn/no-await-expression-member': Linter.RuleEntry;
  'unicorn/no-await-in-promise-methods': Linter.RuleEntry;
  'unicorn/no-console-spaces': Linter.RuleEntry;
  'unicorn/no-document-cookie': Linter.RuleEntry;
  'unicorn/no-empty-file': Linter.RuleEntry;
  'unicorn/no-for-loop': Linter.RuleEntry;
  'unicorn/no-hex-escape': Linter.RuleEntry;
  'unicorn/no-instanceof-builtins': Linter.RuleEntry;
  'unicorn/no-invalid-fetch-options': Linter.RuleEntry;
  'unicorn/no-invalid-remove-event-listener': Linter.RuleEntry;
  'unicorn/no-keyword-prefix': Linter.RuleEntry;
  'unicorn/no-lonely-if': Linter.RuleEntry;
  'unicorn/no-magic-array-flat-depth': Linter.RuleEntry;
  'unicorn/no-named-default': Linter.RuleEntry;
  'unicorn/no-negated-condition': Linter.RuleEntry;
  'unicorn/no-negation-in-equality-check': Linter.RuleEntry;
  'unicorn/no-nested-ternary': Linter.RuleEntry;
  'unicorn/no-new-array': Linter.RuleEntry;
  'unicorn/no-new-buffer': Linter.RuleEntry;
  'unicorn/no-null': Linter.RuleEntry;
  'unicorn/no-object-as-default-parameter': Linter.RuleEntry;
  'unicorn/no-process-exit': Linter.RuleEntry;
  'unicorn/no-single-promise-in-promise-methods': Linter.RuleEntry;
  'unicorn/no-static-only-class': Linter.RuleEntry;
  'unicorn/no-thenable': Linter.RuleEntry;
  'unicorn/no-this-assignment': Linter.RuleEntry;
  'unicorn/no-typeof-undefined': Linter.RuleEntry;
  'unicorn/no-unnecessary-array-flat-depth': Linter.RuleEntry;
  'unicorn/no-unnecessary-array-splice-count': Linter.RuleEntry;
  'unicorn/no-unnecessary-await': Linter.RuleEntry;
  'unicorn/no-unnecessary-polyfills': Linter.RuleEntry;
  'unicorn/no-unnecessary-slice-end': Linter.RuleEntry;
  'unicorn/no-unreadable-array-destructuring': Linter.RuleEntry;
  'unicorn/no-unreadable-iife': Linter.RuleEntry;
  'unicorn/no-unused-properties': Linter.RuleEntry;
  'unicorn/no-useless-fallback-in-spread': Linter.RuleEntry;
  'unicorn/no-useless-length-check': Linter.RuleEntry;
  'unicorn/no-useless-promise-resolve-reject': Linter.RuleEntry;
  'unicorn/no-useless-spread': Linter.RuleEntry;
  'unicorn/no-useless-switch-case': Linter.RuleEntry;
  'unicorn/no-useless-undefined': Linter.RuleEntry;
  'unicorn/no-zero-fractions': Linter.RuleEntry;
  'unicorn/number-literal-case': Linter.RuleEntry;
  'unicorn/numeric-separators-style': Linter.RuleEntry;
  'unicorn/prefer-add-event-listener': Linter.RuleEntry;
  'unicorn/prefer-array-find': Linter.RuleEntry;
  'unicorn/prefer-array-flat-map': Linter.RuleEntry;
  'unicorn/prefer-array-flat': Linter.RuleEntry;
  'unicorn/prefer-array-index-of': Linter.RuleEntry;
  'unicorn/prefer-array-some': Linter.RuleEntry;
  'unicorn/prefer-at': Linter.RuleEntry;
  'unicorn/prefer-blob-reading-methods': Linter.RuleEntry;
  'unicorn/prefer-code-point': Linter.RuleEntry;
  'unicorn/prefer-date-now': Linter.RuleEntry;
  'unicorn/prefer-default-parameters': Linter.RuleEntry;
  'unicorn/prefer-dom-node-append': Linter.RuleEntry;
  'unicorn/prefer-dom-node-dataset': Linter.RuleEntry;
  'unicorn/prefer-dom-node-remove': Linter.RuleEntry;
  'unicorn/prefer-dom-node-text-content': Linter.RuleEntry;
  'unicorn/prefer-event-target': Linter.RuleEntry;
  'unicorn/prefer-export-from': Linter.RuleEntry;
  'unicorn/prefer-global-this': Linter.RuleEntry;
  'unicorn/prefer-import-meta-properties': Linter.RuleEntry;
  'unicorn/prefer-includes': Linter.RuleEntry;
  'unicorn/prefer-json-parse-buffer': Linter.RuleEntry;
  'unicorn/prefer-keyboard-event-key': Linter.RuleEntry;
  'unicorn/prefer-logical-operator-over-ternary': Linter.RuleEntry;
  'unicorn/prefer-math-min-max': Linter.RuleEntry;
  'unicorn/prefer-math-trunc': Linter.RuleEntry;
  'unicorn/prefer-modern-dom-apis': Linter.RuleEntry;
  'unicorn/prefer-modern-math-apis': Linter.RuleEntry;
  'unicorn/prefer-module': Linter.RuleEntry;
  'unicorn/prefer-native-coercion-functions': Linter.RuleEntry;
  'unicorn/prefer-negative-index': Linter.RuleEntry;
  'unicorn/prefer-node-protocol': Linter.RuleEntry;
  'unicorn/prefer-number-properties': Linter.RuleEntry;
  'unicorn/prefer-object-from-entries': Linter.RuleEntry;
  'unicorn/prefer-optional-catch-binding': Linter.RuleEntry;
  'unicorn/prefer-prototype-methods': Linter.RuleEntry;
  'unicorn/prefer-query-selector': Linter.RuleEntry;
  'unicorn/prefer-reflect-apply': Linter.RuleEntry;
  'unicorn/prefer-regexp-test': Linter.RuleEntry;
  'unicorn/prefer-set-has': Linter.RuleEntry;
  'unicorn/prefer-set-size': Linter.RuleEntry;
  'unicorn/prefer-single-call': Linter.RuleEntry;
  'unicorn/prefer-spread': Linter.RuleEntry;
  'unicorn/prefer-string-raw': Linter.RuleEntry;
  'unicorn/prefer-string-replace-all': Linter.RuleEntry;
  'unicorn/prefer-string-slice': Linter.RuleEntry;
  'unicorn/prefer-string-starts-ends-with': Linter.RuleEntry;
  'unicorn/prefer-string-trim-start-end': Linter.RuleEntry;
  'unicorn/prefer-structured-clone': Linter.RuleEntry;
  'unicorn/prefer-switch': Linter.RuleEntry;
  'unicorn/prefer-ternary': Linter.RuleEntry;
  'unicorn/prefer-top-level-await': Linter.RuleEntry;
  'unicorn/prefer-type-error': Linter.RuleEntry;
  'unicorn/prevent-abbreviations': Linter.RuleEntry;
  'unicorn/relative-url-style': Linter.RuleEntry;
  'unicorn/require-array-join-separator': Linter.RuleEntry;
  'unicorn/require-number-to-fixed-digits-argument': Linter.RuleEntry;
  'unicorn/require-post-message-target-origin': Linter.RuleEntry;
  'unicorn/string-content': Linter.RuleEntry;
  'unicorn/switch-case-braces': Linter.RuleEntry;
  'unicorn/template-indent': Linter.RuleEntry;
  'unicorn/text-encoding-identifier-case': Linter.RuleEntry;
  'unicorn/throw-new-error': Linter.RuleEntry;
  'unicorn/no-instanceof-array': Linter.RuleEntry;
  'unicorn/no-length-as-slice-end': Linter.RuleEntry;
  'unicorn/no-array-push-push': Linter.RuleEntry;
}